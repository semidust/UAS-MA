
AVRASM ver. 2.1.30  C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm Wed Dec 28 16:34:21 2022

C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1417): warning: Register r4 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1418): warning: Register r5 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1419): warning: Register r6 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1420): warning: Register r7 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1421): warning: Register r8 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1422): warning: Register r9 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1423): warning: Register r10 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1424): warning: Register r11 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1425): warning: Register r12 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1426): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.49a 
                 ;(C) Copyright 1998-2022 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 12,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _mins=R4
                 	.DEF _mins_msb=R5
                 	.DEF _sec=R6
                 	.DEF _sec_msb=R7
                 	.DEF _lap=R8
                 	.DEF _lap_msb=R9
                 	.DEF _n=R10
                 	.DEF _n_msb=R11
                 	.DEF _prev1=R12
                 	.DEF _prev1_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 008d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G105:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G105:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0000
000034 0000      	.DB  0x0,0x0,0x0,0x0
000035 0000
000036 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 _0x3:
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1469): warning: .cseg .db misalignment - padding zero byte
000037 0001      	.DB  0x1
                 _0x4:
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1471): warning: .cseg .db misalignment - padding zero byte
000038 0001      	.DB  0x1
                 _0x5:
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1473): warning: .cseg .db misalignment - padding zero byte
000039 0001      	.DB  0x1
                 _0x6:
00003a 0100
00003b 0302
00003c 0504
00003d 0706      	.DB  0x0,0x1,0x2,0x3,0x4,0x5,0x6,0x7
00003e 0908
00003f 1110
000040 1312
000041 1514      	.DB  0x8,0x9,0x10,0x11,0x12,0x13,0x14,0x15
000042 1716
000043 1918
000044 2120
000045 2322      	.DB  0x16,0x17,0x18,0x19,0x20,0x21,0x22,0x23
000046 2524
000047 2726
000048 2928
000049 3130      	.DB  0x24,0x25,0x26,0x27,0x28,0x29,0x30,0x31
00004a 3332
00004b 3534
00004c 3736
00004d 3938      	.DB  0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39
00004e 4140
00004f 4342
000050 4544
000051 4746      	.DB  0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47
000052 4948
000053 5150
000054 5352
000055 5554      	.DB  0x48,0x49,0x50,0x51,0x52,0x53,0x54,0x55
000056 5756
000057 5958
000058 6160
000059 6362      	.DB  0x56,0x57,0x58,0x59,0x60,0x61,0x62,0x63
00005a 6564
00005b 6766
00005c 6968
00005d 7170      	.DB  0x64,0x65,0x66,0x67,0x68,0x69,0x70,0x71
00005e 7372
00005f 7574
000060 7776
000061 7978      	.DB  0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79
000062 8180
000063 8382
000064 8584
000065 8786      	.DB  0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87
000066 8988
000067 9190
000068 9392
000069 9594      	.DB  0x88,0x89,0x90,0x91,0x92,0x93,0x94,0x95
00006a 9796
00006b 9998      	.DB  0x96,0x97,0x98,0x99
                 _0x0:
00006c 414c
00006d 2050
00006e 6425
00006f 3a20      	.DB  0x4C,0x41,0x50,0x20,0x25,0x64,0x20,0x3A
000070 2520
000071 2064
000072 206d
000073 6425      	.DB  0x20,0x25,0x64,0x20,0x6D,0x20,0x25,0x64
000074 7320
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1491): warning: .cseg .db misalignment - padding zero byte
000075 0000      	.DB  0x20,0x73,0x0
                 _0x2020060:
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1493): warning: .cseg .db misalignment - padding zero byte
000076 0001      	.DB  0x1
                 _0x2020000:
000077 4e2d
000078 4e41
000079 4900
00007a 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1496): warning: .cseg .db misalignment - padding zero byte
00007b 0000      	.DB  0x0
                 _0x2040003:
00007c c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00007d 0008      	.DW  0x08
00007e 0004      	.DW  0x04
00007f 0066      	.DW  __REG_VARS*2
                 
000080 0001      	.DW  0x01
000081 0262      	.DW  _on
000082 006e      	.DW  _0x3*2
                 
000083 0064      	.DW  0x64
000084 0263      	.DW  _angka
000085 0074      	.DW  _0x6*2
                 
000086 0001      	.DW  0x01
000087 02c7      	.DW  __seed_G101
000088 00ec      	.DW  _0x2020060*2
                 
000089 0002      	.DW  0x02
00008a 02cb      	.DW  __base_y_G102
00008b 00f8      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
00008c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00008d 94f8      	CLI
00008e 27ee      	CLR  R30
00008f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000090 e0f1      	LDI  R31,1
000091 bffb      	OUT  GICR,R31
000092 bfeb      	OUT  GICR,R30
000093 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000094 e08d      	LDI  R24,(14-2)+1
000095 e0a2      	LDI  R26,2
000096 27bb      	CLR  R27
                 __CLEAR_REG:
000097 93ed      	ST   X+,R30
000098 958a      	DEC  R24
000099 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00009a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00009b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00009c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00009d 93ed      	ST   X+,R30
00009e 9701      	SBIW R24,1
00009f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000a0 efea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000a1 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000a2 9185      	LPM  R24,Z+
0000a3 9195      	LPM  R25,Z+
0000a4 9700      	SBIW R24,0
0000a5 f061      	BREQ __GLOBAL_INI_END
0000a6 91a5      	LPM  R26,Z+
0000a7 91b5      	LPM  R27,Z+
0000a8 9005      	LPM  R0,Z+
0000a9 9015      	LPM  R1,Z+
0000aa 01bf      	MOVW R22,R30
0000ab 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000ac 9005      	LPM  R0,Z+
0000ad 920d      	ST   X+,R0
0000ae 9701      	SBIW R24,1
0000af f7e1      	BRNE __GLOBAL_INI_LOOP
0000b0 01fb      	MOVW R30,R22
0000b1 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000b2 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000b3 bfed      	OUT  SPL,R30
0000b4 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000b5 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000b6 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000b7 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000b8 940c 010d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.DSEG
                 ;void tampildata(){
                 ; 0000 0029 void tampildata(){
                 
                 	.CSEG
                 _tampildata:
                 ; .FSTART _tampildata
                 ; 0000 002A PORTB = angka[mins];
0000ba d2ba      	RCALL SUBOPT_0x0
                 ; 0000 002B PORTD = angka[sec];
0000bb d2c0      	RCALL SUBOPT_0x1
                 ; 0000 002C }
0000bc 9508      	RET
                 ; .FEND
                 ;void ubahsec()
                 ; 0000 002F {
                 _ubahsec:
                 ; .FSTART _ubahsec
                 ; 0000 0030 if (PINA.4==0) {
0000bd 99cc      	SBIC 0x19,4
0000be c009      	RJMP _0x7
                 ; 0000 0031 if (sec==59) return;
0000bf e3eb      	LDI  R30,LOW(59)
0000c0 e0f0      	LDI  R31,HIGH(59)
0000c1 15e6      	CP   R30,R6
0000c2 05f7      	CPC  R31,R7
0000c3 f409      	BRNE _0x8
0000c4 9508      	RET
                 ; 0000 0032 sec = sec + 1;
                 _0x8:
0000c5 01f3      	MOVW R30,R6
0000c6 9631      	ADIW R30,1
0000c7 c004      	RJMP _0x1E
                 ; 0000 0033 PORTD = angka[sec];
                 ; 0000 0034 }
                 ; 0000 0035 else if (PINA.5==0) {
                 _0x7:
0000c8 99cd      	SBIC 0x19,5
0000c9 c004      	RJMP _0xA
                 ; 0000 0036 sec = sec -1;
0000ca 01f3      	MOVW R30,R6
0000cb 9731      	SBIW R30,1
                 _0x1E:
0000cc 013f      	MOVW R6,R30
                 ; 0000 0037 PORTD = angka[sec];
0000cd d2ae      	RCALL SUBOPT_0x1
                 ; 0000 0038 }
                 ; 0000 0039 }
                 _0xA:
0000ce 9508      	RET
                 ; .FEND
                 ;void ubahmins()
                 ; 0000 003C {
                 _ubahmins:
                 ; .FSTART _ubahmins
                 ; 0000 003D if (PINA.6==0) {
0000cf 99ce      	SBIC 0x19,6
0000d0 c009      	RJMP _0xB
                 ; 0000 003E if (mins==59) return;
0000d1 e3eb      	LDI  R30,LOW(59)
0000d2 e0f0      	LDI  R31,HIGH(59)
0000d3 15e4      	CP   R30,R4
0000d4 05f5      	CPC  R31,R5
0000d5 f409      	BRNE _0xC
0000d6 9508      	RET
                 ; 0000 003F mins = mins + 1;
                 _0xC:
0000d7 01f2      	MOVW R30,R4
0000d8 9631      	ADIW R30,1
0000d9 c004      	RJMP _0x1F
                 ; 0000 0040 PORTB = angka[mins];
                 ; 0000 0041 }
                 ; 0000 0042 else if (PINA.7==0) {
                 _0xB:
0000da 99cf      	SBIC 0x19,7
0000db c004      	RJMP _0xE
                 ; 0000 0043 mins = mins -1;
0000dc 01f2      	MOVW R30,R4
0000dd 9731      	SBIW R30,1
                 _0x1F:
0000de 012f      	MOVW R4,R30
                 ; 0000 0044 PORTB = angka[mins];
0000df d295      	RCALL SUBOPT_0x0
                 ; 0000 0045 }
                 ; 0000 0046 }
                 _0xE:
0000e0 9508      	RET
                 ; .FEND
                 ;void ubahlap()
                 ; 0000 0049 {
                 _ubahlap:
                 ; .FSTART _ubahlap
                 ; 0000 004A if (PINA.2==0) {
0000e1 99ca      	SBIC 0x19,2
0000e2 c022      	RJMP _0xF
                 ; 0000 004B lcd_gotoxy(0,n);
0000e3 e0e0      	LDI  R30,LOW(0)
0000e4 93ea      	ST   -Y,R30
0000e5 2daa      	MOV  R26,R10
0000e6 d0c7      	RCALL _lcd_gotoxy
                 ; 0000 004C lap = lap + 1;
0000e7 01f4      	MOVW R30,R8
0000e8 9631      	ADIW R30,1
0000e9 014f      	MOVW R8,R30
                 ; 0000 004D lcd_printf("LAP %d : %d m %d s",lap,angka[mins],angka[sec]);
                +
0000ea ede8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000eb e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000ec 93fa      	ST   -Y,R31
0000ed 93ea      	ST   -Y,R30
0000ee 01f4      	MOVW R30,R8
                +
0000ef 2f6f     +MOV R22 , R31
0000f0 0f66     +ADD R22 , R22
0000f1 0b66     +SBC R22 , R22
0000f2 2f76     +MOV R23 , R22
                 	__CWD1
0000f3 d2d3      	RCALL __PUTPARD1
0000f4 e6a3      	LDI  R26,LOW(_angka)
0000f5 e0b2      	LDI  R27,HIGH(_angka)
0000f6 0da4      	ADD  R26,R4
0000f7 1db5      	ADC  R27,R5
0000f8 d28a      	RCALL SUBOPT_0x2
0000f9 e6a3      	LDI  R26,LOW(_angka)
0000fa e0b2      	LDI  R27,HIGH(_angka)
0000fb 0da6      	ADD  R26,R6
0000fc 1db7      	ADC  R27,R7
0000fd d285      	RCALL SUBOPT_0x2
0000fe e08c      	LDI  R24,12
0000ff d24e      	RCALL _lcd_printf
000100 962e      	ADIW R28,14
                 ; 0000 004E n = n + 1;
000101 01f5      	MOVW R30,R10
000102 9631      	ADIW R30,1
000103 015f      	MOVW R10,R30
                 ; 0000 004F }
                 ; 0000 0050 else if (PINA.3==0) {
000104 c007      	RJMP _0x10
                 _0xF:
000105 99cb      	SBIC 0x19,3
000106 c005      	RJMP _0x11
                 ; 0000 0051 lcd_clear();
000107 d0ba      	RCALL _lcd_clear
                 ; 0000 0052 lap = 0;
000108 2488      	CLR  R8
000109 2499      	CLR  R9
                 ; 0000 0053 n = 0;
00010a 24aa      	CLR  R10
00010b 24bb      	CLR  R11
                 ; 0000 0054 }
                 ; 0000 0055 }
                 _0x11:
                 _0x10:
00010c 9508      	RET
                 ; .FEND
                 ;void main(void)
                 ; 0000 0058 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0059 // Declare your local variables here
                 ; 0000 005A prev1 = mins;
00010d 0162      	MOVW R12,R4
                 ; 0000 005B prev2 = sec;
                +
00010e 9260 0260+STS _prev2 + ( 0 ) , R6
000110 9270 0261+STS _prev2 + ( 0 ) + 1 , R7
                 	__PUTWMRN _prev2,0,6,7
                 ; 0000 005C 
                 ; 0000 005D // Input/Output Ports initialization
                 ; 0000 005E // Port A initialization
                 ; 0000 005F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0060 DDRA=0xFF;
000112 efef      	LDI  R30,LOW(255)
000113 bbea      	OUT  0x1A,R30
                 ; 0000 0061 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0062 PORTA=0xFF;
000114 bbeb      	OUT  0x1B,R30
                 ; 0000 0063 
                 ; 0000 0064 // Port B initialization
                 ; 0000 0065 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0066 DDRB=0xFF;
000115 bbe7      	OUT  0x17,R30
                 ; 0000 0067 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0068 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000116 e0e0      	LDI  R30,LOW(0)
000117 bbe8      	OUT  0x18,R30
                 ; 0000 0069 
                 ; 0000 006A // Port C initialization
                 ; 0000 006B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 006C DDRC=0xFF;
000118 efef      	LDI  R30,LOW(255)
000119 bbe4      	OUT  0x14,R30
                 ; 0000 006D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 006E PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00011a e0e0      	LDI  R30,LOW(0)
00011b bbe5      	OUT  0x15,R30
                 ; 0000 006F 
                 ; 0000 0070 // Port D initialization
                 ; 0000 0071 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0072 DDRD=0xFF;
00011c efef      	LDI  R30,LOW(255)
00011d bbe1      	OUT  0x11,R30
                 ; 0000 0073 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0074 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
00011e e0e0      	LDI  R30,LOW(0)
00011f bbe2      	OUT  0x12,R30
                 ; 0000 0075 
                 ; 0000 0076 // Timer/Counter 0 initialization
                 ; 0000 0077 // Clock source: System Clock
                 ; 0000 0078 // Clock value: Timer 0 Stopped
                 ; 0000 0079 // Mode: Normal top=0xFF
                 ; 0000 007A // OC0 output: Disconnected
                 ; 0000 007B TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000120 bfe3      	OUT  0x33,R30
                 ; 0000 007C TCNT0=0x00;
000121 bfe2      	OUT  0x32,R30
                 ; 0000 007D OCR0=0x00;
000122 bfec      	OUT  0x3C,R30
                 ; 0000 007E 
                 ; 0000 007F // Timer/Counter 1 initialization
                 ; 0000 0080 // Clock source: System Clock
                 ; 0000 0081 // Clock value: Timer1 Stopped
                 ; 0000 0082 // Mode: Normal top=0xFFFF
                 ; 0000 0083 // OC1A output: Disconnected
                 ; 0000 0084 // OC1B output: Disconnected
                 ; 0000 0085 // Noise Canceler: Off
                 ; 0000 0086 // Input Capture on Falling Edge
                 ; 0000 0087 // Timer1 Overflow Interrupt: Off
                 ; 0000 0088 // Input Capture Interrupt: Off
                 ; 0000 0089 // Compare A Match Interrupt: Off
                 ; 0000 008A // Compare B Match Interrupt: Off
                 ; 0000 008B TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000123 bdef      	OUT  0x2F,R30
                 ; 0000 008C TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000124 bdee      	OUT  0x2E,R30
                 ; 0000 008D TCNT1H=0x00;
000125 bded      	OUT  0x2D,R30
                 ; 0000 008E TCNT1L=0x00;
000126 bdec      	OUT  0x2C,R30
                 ; 0000 008F ICR1H=0x00;
000127 bde7      	OUT  0x27,R30
                 ; 0000 0090 ICR1L=0x00;
000128 bde6      	OUT  0x26,R30
                 ; 0000 0091 OCR1AH=0x00;
000129 bdeb      	OUT  0x2B,R30
                 ; 0000 0092 OCR1AL=0x00;
00012a bdea      	OUT  0x2A,R30
                 ; 0000 0093 OCR1BH=0x00;
00012b bde9      	OUT  0x29,R30
                 ; 0000 0094 OCR1BL=0x00;
00012c bde8      	OUT  0x28,R30
                 ; 0000 0095 
                 ; 0000 0096 // Timer/Counter 2 initialization
                 ; 0000 0097 // Clock source: System Clock
                 ; 0000 0098 // Clock value: Timer2 Stopped
                 ; 0000 0099 // Mode: Normal top=0xFF
                 ; 0000 009A // OC2 output: Disconnected
                 ; 0000 009B ASSR=0<<AS2;
00012d bde2      	OUT  0x22,R30
                 ; 0000 009C TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
00012e bde5      	OUT  0x25,R30
                 ; 0000 009D TCNT2=0x00;
00012f bde4      	OUT  0x24,R30
                 ; 0000 009E OCR2=0x00;
000130 bde3      	OUT  0x23,R30
                 ; 0000 009F 
                 ; 0000 00A0 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 00A1 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000131 bfe9      	OUT  0x39,R30
                 ; 0000 00A2 
                 ; 0000 00A3 // External Interrupt(s) initialization
                 ; 0000 00A4 // INT0: Off
                 ; 0000 00A5 // INT1: Off
                 ; 0000 00A6 // INT2: Off
                 ; 0000 00A7 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000132 bfe5      	OUT  0x35,R30
                 ; 0000 00A8 MCUCSR=(0<<ISC2);
000133 bfe4      	OUT  0x34,R30
                 ; 0000 00A9 
                 ; 0000 00AA // USART initialization
                 ; 0000 00AB // USART disabled
                 ; 0000 00AC UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000134 b9ea      	OUT  0xA,R30
                 ; 0000 00AD 
                 ; 0000 00AE // Analog Comparator initialization
                 ; 0000 00AF // Analog Comparator: Off
                 ; 0000 00B0 // The Analog Comparator's positive input is
                 ; 0000 00B1 // connected to the AIN0 pin
                 ; 0000 00B2 // The Analog Comparator's negative input is
                 ; 0000 00B3 // connected to the AIN1 pin
                 ; 0000 00B4 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000135 e8e0      	LDI  R30,LOW(128)
000136 b9e8      	OUT  0x8,R30
                 ; 0000 00B5 SFIOR=(0<<ACME);
000137 e0e0      	LDI  R30,LOW(0)
000138 bfe0      	OUT  0x30,R30
                 ; 0000 00B6 
                 ; 0000 00B7 // ADC initialization
                 ; 0000 00B8 // ADC disabled
                 ; 0000 00B9 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
000139 b9e6      	OUT  0x6,R30
                 ; 0000 00BA 
                 ; 0000 00BB // SPI initialization
                 ; 0000 00BC // SPI disabled
                 ; 0000 00BD SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
00013a b9ed      	OUT  0xD,R30
                 ; 0000 00BE 
                 ; 0000 00BF // TWI initialization
                 ; 0000 00C0 // TWI disabled
                 ; 0000 00C1 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
00013b bfe6      	OUT  0x36,R30
                 ; 0000 00C2 
                 ; 0000 00C3 // Alphanumeric LCD initialization
                 ; 0000 00C4 // Connections are specified in the
                 ; 0000 00C5 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 00C6 // RS: PORTC Bit 0
                 ; 0000 00C7 // RD: PORTC Bit 1
                 ; 0000 00C8 // EN: PORTC Bit 2
                 ; 0000 00C9 // D4: PORTC Bit 4
                 ; 0000 00CA // D5: PORTC Bit 5
                 ; 0000 00CB // D6: PORTC Bit 6
                 ; 0000 00CC // D7: PORTC Bit 7
                 ; 0000 00CD // Characters/line: 16
                 ; 0000 00CE lcd_init(16);
00013c e1a0      	LDI  R26,LOW(16)
00013d d0ae      	RCALL _lcd_init
                 ; 0000 00CF 
                 ; 0000 00D0 while (1)
                 _0x12:
                 ; 0000 00D1 {
                 ; 0000 00D2 on = !PINA.1;
00013e e0e0      	LDI  R30,0
00013f 9bc9      	SBIS 0x19,1
000140 e0e1      	LDI  R30,1
000141 93e0 0262 	STS  _on,R30
                 ; 0000 00D3 
                 ; 0000 00D4 
                 ; 0000 00D5 
                 ; 0000 00D6 //clock logic
                 ; 0000 00D7 if (on && !(mins <= 0 && sec <= 0)){
000143 30e0      	CPI  R30,0
000144 f049      	BREQ _0x16
000145 2400      	CLR  R0
000146 1404      	CP   R0,R4
000147 0405      	CPC  R0,R5
000148 f024      	BRLT _0x17
000149 2400      	CLR  R0
00014a 1406      	CP   R0,R6
00014b 0407      	CPC  R0,R7
00014c f40c      	BRGE _0x16
                 _0x17:
00014d c001      	RJMP _0x19
                 _0x16:
00014e c017      	RJMP _0x15
                 _0x19:
                 ; 0000 00D8 sec--;
00014f 01f3      	MOVW R30,R6
000150 9731      	SBIW R30,1
000151 013f      	MOVW R6,R30
000152 9631      	ADIW R30,1
                 ; 0000 00D9 
                 ; 0000 00DA if (sec < 0){
000153 2400      	CLR  R0
000154 1460      	CP   R6,R0
000155 0470      	CPC  R7,R0
000156 f434      	BRGE _0x1A
                 ; 0000 00DB mins--;
000157 01f2      	MOVW R30,R4
000158 9731      	SBIW R30,1
000159 012f      	MOVW R4,R30
                 ; 0000 00DC sec = 59;
00015a e3eb      	LDI  R30,LOW(59)
00015b e0f0      	LDI  R31,HIGH(59)
00015c 013f      	MOVW R6,R30
                 ; 0000 00DD }
                 ; 0000 00DE if (mins < 0){
                 _0x1A:
00015d 2400      	CLR  R0
00015e 1440      	CP   R4,R0
00015f 0450      	CPC  R5,R0
000160 f414      	BRGE _0x1B
                 ; 0000 00DF sec = 0;
000161 2466      	CLR  R6
000162 2477      	CLR  R7
                 ; 0000 00E0 }
                 ; 0000 00E1 delay_ms(70);
                 _0x1B:
000163 e4a6      	LDI  R26,LOW(70)
000164 e0b0      	LDI  R27,0
000165 d266      	RCALL _delay_ms
                 ; 0000 00E2 }
                 ; 0000 00E3 if (!on){
                 _0x15:
000166 91e0 0262 	LDS  R30,_on
000168 30e0      	CPI  R30,0
000169 f429      	BRNE _0x1C
                 ; 0000 00E4 ubahsec();
00016a df52      	RCALL _ubahsec
                 ; 0000 00E5 ubahmins();
00016b df63      	RCALL _ubahmins
                 ; 0000 00E6 delay_ms(40);
00016c e2a8      	LDI  R26,LOW(40)
00016d e0b0      	LDI  R27,0
00016e d25d      	RCALL _delay_ms
                 ; 0000 00E7 }
                 ; 0000 00E8 ubahlap();
                 _0x1C:
00016f df71      	RCALL _ubahlap
                 ; 0000 00E9 tampildata();
000170 df49      	RCALL _tampildata
                 ; 0000 00EA }
000171 cfcc      	RJMP _0x12
                 ; 0000 00EB }
                 _0x1D:
000172 cfff      	RJMP _0x1D
                 ; .FEND
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000173 93ba      	ST   -Y,R27
000174 93aa      	ST   -Y,R26
000175 91a9          ld   r26,y+
000176 91b9          ld   r27,y+
000177 27ee          clr  r30
000178 27ff          clr  r31
                 strlen0:
000179 916d          ld   r22,x+
00017a 2366          tst  r22
00017b f011          breq strlen1
00017c 9631          adiw r30,1
00017d cffb          rjmp strlen0
                 strlen1:
00017e 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00017f 93ba      	ST   -Y,R27
000180 93aa      	ST   -Y,R26
000181 27aa          clr  r26
000182 27bb          clr  r27
000183 91e9          ld   r30,y+
000184 91f9          ld   r31,y+
                 strlenf0:
000185 9005      	lpm  r0,z+
000186 2000          tst  r0
000187 f011          breq strlenf1
000188 9611          adiw r26,1
000189 cffb          rjmp strlenf0
                 strlenf1:
00018a 01fd          movw r30,r26
00018b 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
                 ; .FSTART __lcd_write_nibble_G102
00018c 931a      	ST   -Y,R17
00018d 2f1a      	MOV  R17,R26
00018e b3e5      	IN   R30,0x15
00018f 70ef      	ANDI R30,LOW(0xF)
000190 2fae      	MOV  R26,R30
000191 2fe1      	MOV  R30,R17
000192 7fe0      	ANDI R30,LOW(0xF0)
000193 2bea      	OR   R30,R26
000194 bbe5      	OUT  0x15,R30
                +
000195 e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
000196 958a     +DEC R24
000197 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
000198 9aaa      	SBI  0x15,2
                +
000199 e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
00019a 958a     +DEC R24
00019b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
00019c 98aa      	CBI  0x15,2
                +
00019d e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
00019e 958a     +DEC R24
00019f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
0001a0 c075      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0001a1 93aa      	ST   -Y,R26
0001a2 81a8      	LD   R26,Y
0001a3 dfe8      	RCALL __lcd_write_nibble_G102
0001a4 81e8          ld    r30,y
0001a5 95e2          swap  r30
0001a6 83e8          st    y,r30
0001a7 81a8      	LD   R26,Y
0001a8 dfe3      	RCALL __lcd_write_nibble_G102
                +
0001a9 ec88     +LDI R24 , LOW ( 200 )
                +__DELAY_USB_LOOP :
0001aa 958a     +DEC R24
0001ab f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 200
0001ac 9621      	ADIW R28,1
0001ad 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0001ae 931a      	ST   -Y,R17
0001af 930a      	ST   -Y,R16
0001b0 2f1a      	MOV  R17,R26
0001b1 810a      	LDD  R16,Y+2
0001b2 2fe1      	MOV  R30,R17
0001b3 e0f0      	LDI  R31,0
0001b4 53e5      	SUBI R30,LOW(-__base_y_G102)
0001b5 4ffd      	SBCI R31,HIGH(-__base_y_G102)
0001b6 81e0      	LD   R30,Z
0001b7 0fe0      	ADD  R30,R16
0001b8 2fae      	MOV  R26,R30
0001b9 dfe7      	RCALL __lcd_write_data
0001ba 9300 02cf 	STS  __lcd_x,R16
0001bc 9310 02d0 	STS  __lcd_y,R17
0001be 8119      	LDD  R17,Y+1
0001bf 8108      	LDD  R16,Y+0
0001c0 9623      	ADIW R28,3
0001c1 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0001c2 e0a2      	LDI  R26,LOW(2)
0001c3 d1c5      	RCALL SUBOPT_0x3
0001c4 e0ac      	LDI  R26,LOW(12)
0001c5 dfdb      	RCALL __lcd_write_data
0001c6 e0a1      	LDI  R26,LOW(1)
0001c7 d1c1      	RCALL SUBOPT_0x3
0001c8 e0e0      	LDI  R30,LOW(0)
0001c9 93e0 02d0 	STS  __lcd_y,R30
0001cb 93e0 02cf 	STS  __lcd_x,R30
0001cd 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001ce 931a      	ST   -Y,R17
0001cf 2f1a      	MOV  R17,R26
0001d0 301a      	CPI  R17,10
0001d1 f031      	BREQ _0x2040005
0001d2 91e0 02d1 	LDS  R30,__lcd_maxx
0001d4 91a0 02cf 	LDS  R26,__lcd_x
0001d6 17ae      	CP   R26,R30
0001d7 f050      	BRLO _0x2040004
                 _0x2040005:
0001d8 e0e0      	LDI  R30,LOW(0)
0001d9 93ea      	ST   -Y,R30
0001da 91a0 02d0 	LDS  R26,__lcd_y
0001dc 5faf      	SUBI R26,-LOW(1)
0001dd 93a0 02d0 	STS  __lcd_y,R26
0001df dfce      	RCALL _lcd_gotoxy
0001e0 301a      	CPI  R17,10
0001e1 f1a1      	BREQ _0x20C0001
                 _0x2040004:
0001e2 91e0 02cf 	LDS  R30,__lcd_x
0001e4 5fef      	SUBI R30,-LOW(1)
0001e5 93e0 02cf 	STS  __lcd_x,R30
0001e7 9aa8      	SBI  0x15,0
0001e8 2fa1      	MOV  R26,R17
0001e9 dfb7      	RCALL __lcd_write_data
0001ea 98a8      	CBI  0x15,0
0001eb c02a      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001ec 931a      	ST   -Y,R17
0001ed 2f1a      	MOV  R17,R26
0001ee b3e4      	IN   R30,0x14
0001ef 6fe0      	ORI  R30,LOW(0xF0)
0001f0 bbe4      	OUT  0x14,R30
0001f1 9aa2      	SBI  0x14,2
0001f2 9aa0      	SBI  0x14,0
0001f3 9aa1      	SBI  0x14,1
0001f4 98aa      	CBI  0x15,2
0001f5 98a8      	CBI  0x15,0
0001f6 98a9      	CBI  0x15,1
0001f7 9310 02d1 	STS  __lcd_maxx,R17
0001f9 2fe1      	MOV  R30,R17
0001fa 58e0      	SUBI R30,-LOW(128)
                +
0001fb 93e0 02cd+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
0001fd 2fe1      	MOV  R30,R17
0001fe 54e0      	SUBI R30,-LOW(192)
                +
0001ff 93e0 02ce+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
000201 e1a4      	LDI  R26,LOW(20)
000202 e0b0      	LDI  R27,0
000203 d1c8      	RCALL _delay_ms
000204 d188      	RCALL SUBOPT_0x4
000205 d187      	RCALL SUBOPT_0x4
000206 d186      	RCALL SUBOPT_0x4
000207 e2a0      	LDI  R26,LOW(32)
000208 df83      	RCALL __lcd_write_nibble_G102
                +
000209 e28c     +LDI R24 , LOW ( 300 )
00020a e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
00020b 9701     +SBIW R24 , 1
00020c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
00020d e2a8      	LDI  R26,LOW(40)
00020e df92      	RCALL __lcd_write_data
00020f e0a4      	LDI  R26,LOW(4)
000210 df90      	RCALL __lcd_write_data
000211 e8a5      	LDI  R26,LOW(133)
000212 df8e      	RCALL __lcd_write_data
000213 e0a6      	LDI  R26,LOW(6)
000214 df8c      	RCALL __lcd_write_data
000215 dfac      	RCALL _lcd_clear
                 _0x20C0001:
000216 9119      	LD   R17,Y+
000217 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 __print_G105:
                 ; .FSTART __print_G105
000218 93ba      	ST   -Y,R27
000219 93aa      	ST   -Y,R26
00021a 9726      	SBIW R28,6
00021b d195      	RCALL __SAVELOCR6
00021c e010      	LDI  R17,0
00021d 85ac      	LDD  R26,Y+12
00021e 85bd      	LDD  R27,Y+12+1
00021f e0e0      	LDI  R30,LOW(0)
000220 e0f0      	LDI  R31,HIGH(0)
000221 93ed      	ST   X+,R30
000222 93fc      	ST   X,R31
                 _0x20A0016:
000223 89ea      	LDD  R30,Y+18
000224 89fb      	LDD  R31,Y+18+1
000225 9631      	ADIW R30,1
000226 8bea      	STD  Y+18,R30
000227 8bfb      	STD  Y+18+1,R31
000228 9731      	SBIW R30,1
000229 91e4      	LPM  R30,Z
00022a 2f2e      	MOV  R18,R30
00022b 30e0      	CPI  R30,0
00022c f409      	BRNE PC+2
00022d c10b      	RJMP _0x20A0018
00022e 2fe1      	MOV  R30,R17
00022f 30e0      	CPI  R30,0
000230 f431      	BRNE _0x20A001C
000231 3225      	CPI  R18,37
000232 f411      	BRNE _0x20A001D
000233 e011      	LDI  R17,LOW(1)
000234 c001      	RJMP _0x20A001E
                 _0x20A001D:
000235 d15e      	RCALL SUBOPT_0x5
                 _0x20A001E:
000236 c101      	RJMP _0x20A001B
                 _0x20A001C:
000237 30e1      	CPI  R30,LOW(0x1)
000238 f4a1      	BRNE _0x20A001F
000239 3225      	CPI  R18,37
00023a f411      	BRNE _0x20A0020
00023b d158      	RCALL SUBOPT_0x5
00023c c0fa      	RJMP _0x20A00CC
                 _0x20A0020:
00023d e012      	LDI  R17,LOW(2)
00023e e040      	LDI  R20,LOW(0)
00023f e000      	LDI  R16,LOW(0)
000240 322d      	CPI  R18,45
000241 f411      	BRNE _0x20A0021
000242 e001      	LDI  R16,LOW(1)
000243 c0f4      	RJMP _0x20A001B
                 _0x20A0021:
000244 322b      	CPI  R18,43
000245 f411      	BRNE _0x20A0022
000246 e24b      	LDI  R20,LOW(43)
000247 c0f0      	RJMP _0x20A001B
                 _0x20A0022:
000248 3220      	CPI  R18,32
000249 f411      	BRNE _0x20A0023
00024a e240      	LDI  R20,LOW(32)
00024b c0ec      	RJMP _0x20A001B
                 _0x20A0023:
00024c c002      	RJMP _0x20A0024
                 _0x20A001F:
00024d 30e2      	CPI  R30,LOW(0x2)
00024e f439      	BRNE _0x20A0025
                 _0x20A0024:
00024f e050      	LDI  R21,LOW(0)
000250 e013      	LDI  R17,LOW(3)
000251 3320      	CPI  R18,48
000252 f411      	BRNE _0x20A0026
000253 6800      	ORI  R16,LOW(128)
000254 c0e3      	RJMP _0x20A001B
                 _0x20A0026:
000255 c003      	RJMP _0x20A0027
                 _0x20A0025:
000256 30e3      	CPI  R30,LOW(0x3)
000257 f009      	BREQ PC+2
000258 c0df      	RJMP _0x20A001B
                 _0x20A0027:
000259 3320      	CPI  R18,48
00025a f010      	BRLO _0x20A002A
00025b 332a      	CPI  R18,58
00025c f008      	BRLO _0x20A002B
                 _0x20A002A:
00025d c007      	RJMP _0x20A0029
                 _0x20A002B:
00025e e0aa      	LDI  R26,LOW(10)
00025f 9f5a      	MUL  R21,R26
000260 2d50      	MOV  R21,R0
000261 2fe2      	MOV  R30,R18
000262 53e0      	SUBI R30,LOW(48)
000263 0f5e      	ADD  R21,R30
000264 c0d3      	RJMP _0x20A001B
                 _0x20A0029:
000265 2fe2      	MOV  R30,R18
000266 36e3      	CPI  R30,LOW(0x63)
000267 f439      	BRNE _0x20A002F
000268 d132      	RCALL SUBOPT_0x6
000269 89e8      	LDD  R30,Y+16
00026a 89f9      	LDD  R31,Y+16+1
00026b 81a4      	LDD  R26,Z+4
00026c 93aa      	ST   -Y,R26
00026d d133      	RCALL SUBOPT_0x7
00026e c0c8      	RJMP _0x20A0030
                 _0x20A002F:
00026f 37e3      	CPI  R30,LOW(0x73)
000270 f429      	BRNE _0x20A0032
000271 d129      	RCALL SUBOPT_0x6
000272 d134      	RCALL SUBOPT_0x8
000273 deff      	RCALL _strlen
000274 2f1e      	MOV  R17,R30
000275 c007      	RJMP _0x20A0033
                 _0x20A0032:
000276 37e0      	CPI  R30,LOW(0x70)
000277 f449      	BRNE _0x20A0035
000278 d122      	RCALL SUBOPT_0x6
000279 d12d      	RCALL SUBOPT_0x8
00027a df04      	RCALL _strlenf
00027b 2f1e      	MOV  R17,R30
00027c 6008      	ORI  R16,LOW(8)
                 _0x20A0033:
00027d 6002      	ORI  R16,LOW(2)
00027e 770f      	ANDI R16,LOW(127)
00027f e030      	LDI  R19,LOW(0)
000280 c03a      	RJMP _0x20A0036
                 _0x20A0035:
000281 36e4      	CPI  R30,LOW(0x64)
000282 f011      	BREQ _0x20A0039
000283 36e9      	CPI  R30,LOW(0x69)
000284 f411      	BRNE _0x20A003A
                 _0x20A0039:
000285 6004      	ORI  R16,LOW(4)
000286 c002      	RJMP _0x20A003B
                 _0x20A003A:
000287 37e5      	CPI  R30,LOW(0x75)
000288 f431      	BRNE _0x20A003C
                 _0x20A003B:
000289 e5e4      	LDI  R30,LOW(_tbl10_G105*2)
00028a e0f0      	LDI  R31,HIGH(_tbl10_G105*2)
00028b 83ee      	STD  Y+6,R30
00028c 83ff      	STD  Y+6+1,R31
00028d e015      	LDI  R17,LOW(5)
00028e c00c      	RJMP _0x20A003D
                 _0x20A003C:
00028f 35e8      	CPI  R30,LOW(0x58)
000290 f411      	BRNE _0x20A003F
000291 6008      	ORI  R16,LOW(8)
000292 c003      	RJMP _0x20A0040
                 _0x20A003F:
000293 37e8      	CPI  R30,LOW(0x78)
000294 f009      	BREQ PC+2
000295 c0a1      	RJMP _0x20A0071
                 _0x20A0040:
000296 e5ee      	LDI  R30,LOW(_tbl16_G105*2)
000297 e0f0      	LDI  R31,HIGH(_tbl16_G105*2)
000298 83ee      	STD  Y+6,R30
000299 83ff      	STD  Y+6+1,R31
00029a e014      	LDI  R17,LOW(4)
                 _0x20A003D:
00029b ff02      	SBRS R16,2
00029c c015      	RJMP _0x20A0042
00029d d0fd      	RCALL SUBOPT_0x6
00029e 89a8      	LDD  R26,Y+16
00029f 89b9      	LDD  R27,Y+16+1
0002a0 9614      	ADIW R26,4
0002a1 91ed      	LD   R30,X+
0002a2 91fd      	LD   R31,X+
0002a3 87ea      	STD  Y+10,R30
0002a4 87fb      	STD  Y+10+1,R31
0002a5 85ab      	LDD  R26,Y+11
0002a6 23aa      	TST  R26
0002a7 f422      	BRPL _0x20A0043
0002a8 d116      	RCALL __ANEGW1
0002a9 87ea      	STD  Y+10,R30
0002aa 87fb      	STD  Y+10+1,R31
0002ab e24d      	LDI  R20,LOW(45)
                 _0x20A0043:
0002ac 3040      	CPI  R20,0
0002ad f011      	BREQ _0x20A0044
0002ae 5f1f      	SUBI R17,-LOW(1)
0002af c001      	RJMP _0x20A0045
                 _0x20A0044:
0002b0 7f0b      	ANDI R16,LOW(251)
                 _0x20A0045:
0002b1 c009      	RJMP _0x20A0046
                 _0x20A0042:
0002b2 d0e8      	RCALL SUBOPT_0x6
0002b3 89a8      	LDD  R26,Y+16
0002b4 89b9      	LDD  R27,Y+16+1
0002b5 9614      	ADIW R26,4
                +
0002b6 91ed     +LD R30 , X +
0002b7 91fc     +LD R31 , X
0002b8 9711     +SBIW R26 , 1
                 	__GETW1P
0002b9 87ea      	STD  Y+10,R30
0002ba 87fb      	STD  Y+10+1,R31
                 _0x20A0046:
                 _0x20A0036:
0002bb fd00      	SBRC R16,0
0002bc c010      	RJMP _0x20A0047
                 _0x20A0048:
0002bd 1715      	CP   R17,R21
0002be f470      	BRSH _0x20A004A
0002bf ff07      	SBRS R16,7
0002c0 c008      	RJMP _0x20A004B
0002c1 ff02      	SBRS R16,2
0002c2 c004      	RJMP _0x20A004C
0002c3 7f0b      	ANDI R16,LOW(251)
0002c4 2f24      	MOV  R18,R20
0002c5 5011      	SUBI R17,LOW(1)
0002c6 c001      	RJMP _0x20A004D
                 _0x20A004C:
0002c7 e320      	LDI  R18,LOW(48)
                 _0x20A004D:
0002c8 c001      	RJMP _0x20A004E
                 _0x20A004B:
0002c9 e220      	LDI  R18,LOW(32)
                 _0x20A004E:
0002ca d0c9      	RCALL SUBOPT_0x5
0002cb 5051      	SUBI R21,LOW(1)
0002cc cff0      	RJMP _0x20A0048
                 _0x20A004A:
                 _0x20A0047:
0002cd 2f31      	MOV  R19,R17
0002ce ff01      	SBRS R16,1
0002cf c016      	RJMP _0x20A004F
                 _0x20A0050:
0002d0 3030      	CPI  R19,0
0002d1 f099      	BREQ _0x20A0052
0002d2 ff03      	SBRS R16,3
0002d3 c006      	RJMP _0x20A0053
0002d4 81ee      	LDD  R30,Y+6
0002d5 81ff      	LDD  R31,Y+6+1
0002d6 9125      	LPM  R18,Z+
0002d7 83ee      	STD  Y+6,R30
0002d8 83ff      	STD  Y+6+1,R31
0002d9 c005      	RJMP _0x20A0054
                 _0x20A0053:
0002da 81ae      	LDD  R26,Y+6
0002db 81bf      	LDD  R27,Y+6+1
0002dc 912d      	LD   R18,X+
0002dd 83ae      	STD  Y+6,R26
0002de 83bf      	STD  Y+6+1,R27
                 _0x20A0054:
0002df d0b4      	RCALL SUBOPT_0x5
0002e0 3050      	CPI  R21,0
0002e1 f009      	BREQ _0x20A0055
0002e2 5051      	SUBI R21,LOW(1)
                 _0x20A0055:
0002e3 5031      	SUBI R19,LOW(1)
0002e4 cfeb      	RJMP _0x20A0050
                 _0x20A0052:
0002e5 c048      	RJMP _0x20A0056
                 _0x20A004F:
                 _0x20A0058:
0002e6 e320      	LDI  R18,LOW(48)
0002e7 81ee      	LDD  R30,Y+6
0002e8 81ff      	LDD  R31,Y+6+1
0002e9 d0d9      	RCALL __GETW1PF
0002ea 87e8      	STD  Y+8,R30
0002eb 87f9      	STD  Y+8+1,R31
0002ec 81ee      	LDD  R30,Y+6
0002ed 81ff      	LDD  R31,Y+6+1
0002ee 9632      	ADIW R30,2
0002ef 83ee      	STD  Y+6,R30
0002f0 83ff      	STD  Y+6+1,R31
                 _0x20A005A:
0002f1 85e8      	LDD  R30,Y+8
0002f2 85f9      	LDD  R31,Y+8+1
0002f3 85aa      	LDD  R26,Y+10
0002f4 85bb      	LDD  R27,Y+10+1
0002f5 17ae      	CP   R26,R30
0002f6 07bf      	CPC  R27,R31
0002f7 f050      	BRLO _0x20A005C
0002f8 5f2f      	SUBI R18,-LOW(1)
0002f9 85a8      	LDD  R26,Y+8
0002fa 85b9      	LDD  R27,Y+8+1
0002fb 85ea      	LDD  R30,Y+10
0002fc 85fb      	LDD  R31,Y+10+1
0002fd 1bea      	SUB  R30,R26
0002fe 0bfb      	SBC  R31,R27
0002ff 87ea      	STD  Y+10,R30
000300 87fb      	STD  Y+10+1,R31
000301 cfef      	RJMP _0x20A005A
                 _0x20A005C:
000302 332a      	CPI  R18,58
000303 f028      	BRLO _0x20A005D
000304 ff03      	SBRS R16,3
000305 c002      	RJMP _0x20A005E
000306 5f29      	SUBI R18,-LOW(7)
000307 c001      	RJMP _0x20A005F
                 _0x20A005E:
000308 5d29      	SUBI R18,-LOW(39)
                 _0x20A005F:
                 _0x20A005D:
000309 fd04      	SBRC R16,4
00030a c019      	RJMP _0x20A0061
00030b 3321      	CPI  R18,49
00030c f420      	BRSH _0x20A0063
00030d 85a8      	LDD  R26,Y+8
00030e 85b9      	LDD  R27,Y+8+1
00030f 9711      	SBIW R26,1
000310 f409      	BRNE _0x20A0062
                 _0x20A0063:
000311 c009      	RJMP _0x20A00CD
                 _0x20A0062:
000312 1753      	CP   R21,R19
000313 f010      	BRLO _0x20A0067
000314 ff00      	SBRS R16,0
000315 c001      	RJMP _0x20A0068
                 _0x20A0067:
000316 c011      	RJMP _0x20A0066
                 _0x20A0068:
000317 e220      	LDI  R18,LOW(32)
000318 ff07      	SBRS R16,7
000319 c00a      	RJMP _0x20A0069
00031a e320      	LDI  R18,LOW(48)
                 _0x20A00CD:
00031b 6100      	ORI  R16,LOW(16)
00031c ff02      	SBRS R16,2
00031d c006      	RJMP _0x20A006A
00031e 7f0b      	ANDI R16,LOW(251)
00031f 934a      	ST   -Y,R20
000320 d080      	RCALL SUBOPT_0x7
000321 3050      	CPI  R21,0
000322 f009      	BREQ _0x20A006B
000323 5051      	SUBI R21,LOW(1)
                 _0x20A006B:
                 _0x20A006A:
                 _0x20A0069:
                 _0x20A0061:
000324 d06f      	RCALL SUBOPT_0x5
000325 3050      	CPI  R21,0
000326 f009      	BREQ _0x20A006C
000327 5051      	SUBI R21,LOW(1)
                 _0x20A006C:
                 _0x20A0066:
000328 5031      	SUBI R19,LOW(1)
000329 85a8      	LDD  R26,Y+8
00032a 85b9      	LDD  R27,Y+8+1
00032b 9712      	SBIW R26,2
00032c f008      	BRLO _0x20A0059
00032d cfb8      	RJMP _0x20A0058
                 _0x20A0059:
                 _0x20A0056:
00032e ff00      	SBRS R16,0
00032f c007      	RJMP _0x20A006D
                 _0x20A006E:
000330 3050      	CPI  R21,0
000331 f029      	BREQ _0x20A0070
000332 5051      	SUBI R21,LOW(1)
000333 e2e0      	LDI  R30,LOW(32)
000334 93ea      	ST   -Y,R30
000335 d06b      	RCALL SUBOPT_0x7
000336 cff9      	RJMP _0x20A006E
                 _0x20A0070:
                 _0x20A006D:
                 _0x20A0071:
                 _0x20A0030:
                 _0x20A00CC:
000337 e010      	LDI  R17,LOW(0)
                 _0x20A001B:
000338 ceea      	RJMP _0x20A0016
                 _0x20A0018:
000339 85ac      	LDD  R26,Y+12
00033a 85bd      	LDD  R27,Y+12+1
00033b 91ed      	LD   R30,X+
00033c 91fd      	LD   R31,X+
00033d d07a      	RCALL __LOADLOCR6
00033e 9664      	ADIW R28,20
00033f 9508      	RET
                 ; .FEND
                 _put_lcd_G105:
                 ; .FSTART _put_lcd_G105
000340 d072      	RCALL __SAVELOCR4
000341 018d      	MOVW R16,R26
000342 813c      	LDD  R19,Y+4
000343 2fa3      	MOV  R26,R19
000344 de89      	RCALL _lcd_putchar
000345 01d8      	MOVW R26,R16
000346 91ed      	LD   R30,X+
000347 91fd      	LD   R31,X+
000348 9631      	ADIW R30,1
000349 93fe      	ST   -X,R31
00034a 93ee      	ST   -X,R30
00034b d06e      	RCALL __LOADLOCR4
00034c 9625      	ADIW R28,5
00034d 9508      	RET
                 ; .FEND
                 _lcd_printf:
                 ; .FSTART _lcd_printf
00034e 92ff      	PUSH R15
00034f 2ef8      	MOV  R15,R24
000350 9726      	SBIW R28,6
000351 931a      	ST   -Y,R17
000352 930a      	ST   -Y,R16
000353 01de      	MOVW R26,R28
000354 9614      	ADIW R26,4
                +
000355 2400     +CLR R0
000356 0daf     +ADD R26 , R15
000357 1db0     +ADC R27 , R0
                 	__ADDW2R15
000358 018d      	MOVW R16,R26
000359 e0e0      	LDI  R30,LOW(0)
00035a 83ec      	STD  Y+4,R30
00035b 83ed      	STD  Y+4+1,R30
00035c 83ee      	STD  Y+6,R30
00035d 83ef      	STD  Y+6+1,R30
00035e 01de      	MOVW R26,R28
00035f 9618      	ADIW R26,8
                +
000360 2400     +CLR R0
000361 0daf     +ADD R26 , R15
000362 1db0     +ADC R27 , R0
                 	__ADDW2R15
000363 91ed      	LD   R30,X+
000364 91fd      	LD   R31,X+
000365 93fa      	ST   -Y,R31
000366 93ea      	ST   -Y,R30
000367 931a      	ST   -Y,R17
000368 930a      	ST   -Y,R16
000369 e4e0      	LDI  R30,LOW(_put_lcd_G105)
00036a e0f3      	LDI  R31,HIGH(_put_lcd_G105)
00036b 93fa      	ST   -Y,R31
00036c 93ea      	ST   -Y,R30
00036d 01de      	MOVW R26,R28
00036e 9618      	ADIW R26,8
00036f dea8      	RCALL __print_G105
000370 8119      	LDD  R17,Y+1
000371 8108      	LDD  R16,Y+0
000372 9628      	ADIW R28,8
000373 90ff      	POP  R15
000374 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _prev2:
000260           	.BYTE 0x2
                 _on:
000262           	.BYTE 0x1
                 _angka:
000263           	.BYTE 0x64
                 __seed_G101:
0002c7           	.BYTE 0x4
                 __base_y_G102:
0002cb           	.BYTE 0x4
                 __lcd_x:
0002cf           	.BYTE 0x1
                 __lcd_y:
0002d0           	.BYTE 0x1
                 __lcd_maxx:
0002d1           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000375 e6a3      	LDI  R26,LOW(_angka)
000376 e0b2      	LDI  R27,HIGH(_angka)
000377 0da4      	ADD  R26,R4
000378 1db5      	ADC  R27,R5
000379 91ec      	LD   R30,X
00037a bbe8      	OUT  0x18,R30
00037b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
00037c e6a3      	LDI  R26,LOW(_angka)
00037d e0b2      	LDI  R27,HIGH(_angka)
00037e 0da6      	ADD  R26,R6
00037f 1db7      	ADC  R27,R7
000380 91ec      	LD   R30,X
000381 bbe2      	OUT  0x12,R30
000382 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
000383 91ec      	LD   R30,X
000384 27ff      	CLR  R31
000385 2766      	CLR  R22
000386 2777      	CLR  R23
000387 d03f      	RCALL __PUTPARD1
000388 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000389 de17      	RCALL __lcd_write_data
00038a e0a3      	LDI  R26,LOW(3)
00038b e0b0      	LDI  R27,0
00038c c03f      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x4:
00038d e3a0      	LDI  R26,LOW(48)
00038e ddfd      	RCALL __lcd_write_nibble_G102
                +
00038f e28c     +LDI R24 , LOW ( 300 )
000390 e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
000391 9701     +SBIW R24 , 1
000392 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
000393 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x5:
000394 932a      	ST   -Y,R18
000395 85ad      	LDD  R26,Y+13
000396 85be      	LDD  R27,Y+13+1
000397 85ef      	LDD  R30,Y+15
000398 89f8      	LDD  R31,Y+15+1
000399 9509      	ICALL
00039a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x6:
00039b 89e8      	LDD  R30,Y+16
00039c 89f9      	LDD  R31,Y+16+1
00039d 9734      	SBIW R30,4
00039e 8be8      	STD  Y+16,R30
00039f 8bf9      	STD  Y+16+1,R31
0003a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
0003a1 85ad      	LDD  R26,Y+13
0003a2 85be      	LDD  R27,Y+13+1
0003a3 85ef      	LDD  R30,Y+15
0003a4 89f8      	LDD  R31,Y+15+1
0003a5 9509      	ICALL
0003a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
0003a7 89a8      	LDD  R26,Y+16
0003a8 89b9      	LDD  R27,Y+16+1
0003a9 9614      	ADIW R26,4
0003aa 91ed      	LD   R30,X+
0003ab 91fd      	LD   R31,X+
0003ac 83ee      	STD  Y+6,R30
0003ad 83ff      	STD  Y+6+1,R31
0003ae 81ae      	LDD  R26,Y+6
0003af 81bf      	LDD  R27,Y+6+1
0003b0 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0003b1 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003b2 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003b3 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003b4 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003b5 931a      	ST   -Y,R17
0003b6 930a      	ST   -Y,R16
0003b7 9508      	RET
                 
                 __LOADLOCR6:
0003b8 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003b9 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003ba 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003bb 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003bc 8119      	LDD  R17,Y+1
0003bd 8108      	LD   R16,Y
0003be 9508      	RET
                 
                 __ANEGW1:
0003bf 95f1      	NEG  R31
0003c0 95e1      	NEG  R30
0003c1 40f0      	SBCI R31,0
0003c2 9508      	RET
                 
                 __GETW1PF:
0003c3 9005      	LPM  R0,Z+
0003c4 91f4      	LPM  R31,Z
0003c5 2de0      	MOV  R30,R0
0003c6 9508      	RET
                 
                 __PUTPARD1:
0003c7 937a      	ST   -Y,R23
0003c8 936a      	ST   -Y,R22
0003c9 93fa      	ST   -Y,R31
0003ca 93ea      	ST   -Y,R30
0003cb 9508      	RET
                 
                 _delay_ms:
0003cc 9610      	adiw r26,0
0003cd f039      	breq __delay_ms1
                 __delay_ms0:
0003ce 95a8      	wdr
                +
0003cf eb88     +LDI R24 , LOW ( 0xBB8 )
0003d0 e09b     +LDI R25 , HIGH ( 0xBB8 )
                +__DELAY_USW_LOOP :
0003d1 9701     +SBIW R24 , 1
0003d2 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xBB8
0003d3 9711      	sbiw r26,1
0003d4 f7c9      	brne __delay_ms0
                 __delay_ms1:
0003d5 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  25 r1 :   1 r2 :   0 r3 :   0 r4 :  11 r5 :   5 r6 :  13 r7 :   7 
r8 :   4 r9 :   1 r10:   4 r11:   1 r12:   1 r13:   0 r14:   0 r15:   5 
r16:  37 r17:  38 r18:  27 r19:  10 r20:   9 r21:  17 r22:  12 r23:   3 
r24:  23 r25:   5 r26:  91 r27:  37 r28:  12 r29:   1 r30: 214 r31:  58 
x  :  24 y  : 136 z  :  14 
Registers used: 31 out of 35 (88.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   6 add   :   9 
adiw  :  23 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  16 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   1 brmi  :   0 brne  :  31 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  21 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :  10 cpc   :   7 cpi   :  33 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   0 jmp   :  22 ld    :  27 ldd   :  59 ldi   : 102 
lds   :   5 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  26 movw  :  27 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  44 pop   :   1 push  :   1 rcall :  63 ret   :  29 
reti  :   0 rjmp  :  66 rol   :   0 ror   :   0 sbc   :   2 sbci  :   2 
sbi   :   5 sbic  :   6 sbis  :   1 sbiw  :  18 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  46 std   :  30 sts   :  12 sub   :   1 subi  :  18 swap  :   1 
tst   :   3 wdr   :   1 
Instructions used: 54 out of 116 (46.6%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0007ac   1766    198   1964   32768   6.0%
[.dseg] 0x000060 0x0002d2      0    114    114    2048   5.6%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 16 warnings
