
AVRASM ver. 2.1.30  C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm Wed Dec 28 15:43:15 2022

C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1417): warning: Register r4 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1418): warning: Register r5 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1419): warning: Register r6 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1420): warning: Register r7 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1421): warning: Register r8 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1422): warning: Register r9 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1423): warning: Register r10 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1424): warning: Register r11 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1425): warning: Register r13 already defined by the .DEF directive
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1426): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.49a 
                 ;(C) Copyright 1998-2022 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 12,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _mins=R4
                 	.DEF _mins_msb=R5
                 	.DEF _sec=R6
                 	.DEF _sec_msb=R7
                 	.DEF _prev1=R8
                 	.DEF _prev1_msb=R9
                 	.DEF _prev2=R10
                 	.DEF _prev2_msb=R11
                 	.DEF _on=R13
                 	.DEF _prev_on=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0080 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G105:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G105:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0000
000034 0005      	.DB  0x0,0x0,0x5,0x0
000035 0000
000036 0000      	.DB  0x0,0x0,0x0,0x0
000037 0100      	.DB  0x0,0x1
                 
                 _0x3:
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1470): warning: .cseg .db misalignment - padding zero byte
000038 0001      	.DB  0x1
                 _0x4:
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1472): warning: .cseg .db misalignment - padding zero byte
000039 0001      	.DB  0x1
                 _0x5:
00003a 0100
00003b 0302
00003c 0504
00003d 0706      	.DB  0x0,0x1,0x2,0x3,0x4,0x5,0x6,0x7
00003e 0908
00003f 1110
000040 1312
000041 1514      	.DB  0x8,0x9,0x10,0x11,0x12,0x13,0x14,0x15
000042 1716
000043 1918
000044 2120
000045 2322      	.DB  0x16,0x17,0x18,0x19,0x20,0x21,0x22,0x23
000046 2524
000047 2726
000048 2928
000049 3130      	.DB  0x24,0x25,0x26,0x27,0x28,0x29,0x30,0x31
00004a 3332
00004b 3534
00004c 3736
00004d 3938      	.DB  0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39
00004e 4140
00004f 4342
000050 4544
000051 4746      	.DB  0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47
000052 4948
000053 5150
000054 5352
000055 5554      	.DB  0x48,0x49,0x50,0x51,0x52,0x53,0x54,0x55
000056 5756
000057 5958
000058 6160
000059 6362      	.DB  0x56,0x57,0x58,0x59,0x60,0x61,0x62,0x63
00005a 6564
00005b 6766
00005c 6968
00005d 7170      	.DB  0x64,0x65,0x66,0x67,0x68,0x69,0x70,0x71
00005e 7372
00005f 7574
000060 7776
000061 7978      	.DB  0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79
000062 8180
000063 8382
000064 8584
000065 8786      	.DB  0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87
000066 8988
000067 9190
000068 9392
000069 9594      	.DB  0x88,0x89,0x90,0x91,0x92,0x93,0x94,0x95
00006a 9796
00006b 9998      	.DB  0x96,0x97,0x98,0x99
                 _0x2020060:
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1488): warning: .cseg .db misalignment - padding zero byte
00006c 0001      	.DB  0x1
                 _0x2020000:
00006d 4e2d
00006e 4e41
00006f 4900
000070 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Lenovo\Documents\KULIAH\E-LEARNING\SEMESTER 3\PRAKTEK MA\UAS\UAS-MA\AVR\Debug\List\uas-ma.asm(1491): warning: .cseg .db misalignment - padding zero byte
000071 0000      	.DB  0x0
                 _0x2040003:
000072 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000073 000a      	.DW  0x0A
000074 0004      	.DW  0x04
000075 0066      	.DW  __REG_VARS*2
                 
000076 0064      	.DW  0x64
000077 0260      	.DW  _angka
000078 0074      	.DW  _0x5*2
                 
000079 0001      	.DW  0x01
00007a 02c4      	.DW  __seed_G101
00007b 00d8      	.DW  _0x2020060*2
                 
00007c 0002      	.DW  0x02
00007d 02c8      	.DW  __base_y_G102
00007e 00e4      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
00007f 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000080 94f8      	CLI
000081 27ee      	CLR  R30
000082 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000083 e0f1      	LDI  R31,1
000084 bffb      	OUT  GICR,R31
000085 bfeb      	OUT  GICR,R30
000086 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000087 e08d      	LDI  R24,(14-2)+1
000088 e0a2      	LDI  R26,2
000089 27bb      	CLR  R27
                 __CLEAR_REG:
00008a 93ed      	ST   X+,R30
00008b 958a      	DEC  R24
00008c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00008d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00008e e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00008f e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000090 93ed      	ST   X+,R30
000091 9701      	SBIW R24,1
000092 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000093 eee6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000094 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000095 9185      	LPM  R24,Z+
000096 9195      	LPM  R25,Z+
000097 9700      	SBIW R24,0
000098 f061      	BREQ __GLOBAL_INI_END
000099 91a5      	LPM  R26,Z+
00009a 91b5      	LPM  R27,Z+
00009b 9005      	LPM  R0,Z+
00009c 9015      	LPM  R1,Z+
00009d 01bf      	MOVW R22,R30
00009e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00009f 9005      	LPM  R0,Z+
0000a0 920d      	ST   X+,R0
0000a1 9701      	SBIW R24,1
0000a2 f7e1      	BRNE __GLOBAL_INI_LOOP
0000a3 01fb      	MOVW R30,R22
0000a4 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000a5 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000a6 bfed      	OUT  SPL,R30
0000a7 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000a8 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000a9 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000aa e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000ab 940c 00d4 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.DSEG
                 ;void tampildata(){
                 ; 0000 0029 void tampildata(){
                 
                 	.CSEG
                 _tampildata:
                 ; .FSTART _tampildata
                 ; 0000 002A PORTB = angka[mins];
0000ad d0de      	RCALL SUBOPT_0x0
                 ; 0000 002B PORTD = angka[sec];
0000ae d0e4      	RCALL SUBOPT_0x1
                 ; 0000 002C }
0000af 9508      	RET
                 ; .FEND
                 ;void ubahsec()
                 ; 0000 002F {
                 _ubahsec:
                 ; .FSTART _ubahsec
                 ; 0000 0030 if (PINA.4==0) {
0000b0 99cc      	SBIC 0x19,4
0000b1 c009      	RJMP _0x6
                 ; 0000 0031 if (sec==59) return;
0000b2 e3eb      	LDI  R30,LOW(59)
0000b3 e0f0      	LDI  R31,HIGH(59)
0000b4 15e6      	CP   R30,R6
0000b5 05f7      	CPC  R31,R7
0000b6 f409      	BRNE _0x7
0000b7 9508      	RET
                 ; 0000 0032 sec = sec + 1;
                 _0x7:
0000b8 01f3      	MOVW R30,R6
0000b9 9631      	ADIW R30,1
0000ba c004      	RJMP _0x1A
                 ; 0000 0033 PORTD = angka[sec];
                 ; 0000 0034 }
                 ; 0000 0035 else if (PINA.5==0) {
                 _0x6:
0000bb 99cd      	SBIC 0x19,5
0000bc c004      	RJMP _0x9
                 ; 0000 0036 sec = sec -1;
0000bd 01f3      	MOVW R30,R6
0000be 9731      	SBIW R30,1
                 _0x1A:
0000bf 013f      	MOVW R6,R30
                 ; 0000 0037 PORTD = angka[sec];
0000c0 d0d2      	RCALL SUBOPT_0x1
                 ; 0000 0038 }
                 ; 0000 0039 }
                 _0x9:
0000c1 9508      	RET
                 ; .FEND
                 ;void ubahmins()
                 ; 0000 003C {
                 _ubahmins:
                 ; .FSTART _ubahmins
                 ; 0000 003D if (PINA.6==0) {
0000c2 99ce      	SBIC 0x19,6
0000c3 c009      	RJMP _0xA
                 ; 0000 003E if (mins==59) return;
0000c4 e3eb      	LDI  R30,LOW(59)
0000c5 e0f0      	LDI  R31,HIGH(59)
0000c6 15e4      	CP   R30,R4
0000c7 05f5      	CPC  R31,R5
0000c8 f409      	BRNE _0xB
0000c9 9508      	RET
                 ; 0000 003F mins = mins + 1;
                 _0xB:
0000ca 01f2      	MOVW R30,R4
0000cb 9631      	ADIW R30,1
0000cc c004      	RJMP _0x1B
                 ; 0000 0040 PORTB = angka[mins];
                 ; 0000 0041 }
                 ; 0000 0042 else if (PINA.7==0) {
                 _0xA:
0000cd 99cf      	SBIC 0x19,7
0000ce c004      	RJMP _0xD
                 ; 0000 0043 mins = mins -1;
0000cf 01f2      	MOVW R30,R4
0000d0 9731      	SBIW R30,1
                 _0x1B:
0000d1 012f      	MOVW R4,R30
                 ; 0000 0044 PORTB = angka[mins];
0000d2 d0b9      	RCALL SUBOPT_0x0
                 ; 0000 0045 }
                 ; 0000 0046 }
                 _0xD:
0000d3 9508      	RET
                 ; .FEND
                 ;void main(void)
                 ; 0000 0049 {
                 _main:
                 ; .FSTART _main
                 ; 0000 004A // Declare your local variables here
                 ; 0000 004B prev1 = mins;
0000d4 0142      	MOVW R8,R4
                 ; 0000 004C prev2 = sec;
0000d5 0153      	MOVW R10,R6
                 ; 0000 004D 
                 ; 0000 004E // Input/Output Ports initialization
                 ; 0000 004F // Port A initialization
                 ; 0000 0050 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0051 DDRA=0xFF;
0000d6 efef      	LDI  R30,LOW(255)
0000d7 bbea      	OUT  0x1A,R30
                 ; 0000 0052 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0053 PORTA=0xFF;
0000d8 bbeb      	OUT  0x1B,R30
                 ; 0000 0054 
                 ; 0000 0055 // Port B initialization
                 ; 0000 0056 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0057 DDRB=0xFF;
0000d9 bbe7      	OUT  0x17,R30
                 ; 0000 0058 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0059 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0000da e0e0      	LDI  R30,LOW(0)
0000db bbe8      	OUT  0x18,R30
                 ; 0000 005A 
                 ; 0000 005B // Port C initialization
                 ; 0000 005C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 005D DDRC=0xFF;
0000dc efef      	LDI  R30,LOW(255)
0000dd bbe4      	OUT  0x14,R30
                 ; 0000 005E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 005F PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0000de e0e0      	LDI  R30,LOW(0)
0000df bbe5      	OUT  0x15,R30
                 ; 0000 0060 
                 ; 0000 0061 // Port D initialization
                 ; 0000 0062 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0063 DDRD=0xFF;
0000e0 efef      	LDI  R30,LOW(255)
0000e1 bbe1      	OUT  0x11,R30
                 ; 0000 0064 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0065 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
0000e2 e0e0      	LDI  R30,LOW(0)
0000e3 bbe2      	OUT  0x12,R30
                 ; 0000 0066 
                 ; 0000 0067 // Timer/Counter 0 initialization
                 ; 0000 0068 // Clock source: System Clock
                 ; 0000 0069 // Clock value: Timer 0 Stopped
                 ; 0000 006A // Mode: Normal top=0xFF
                 ; 0000 006B // OC0 output: Disconnected
                 ; 0000 006C TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
0000e4 bfe3      	OUT  0x33,R30
                 ; 0000 006D TCNT0=0x00;
0000e5 bfe2      	OUT  0x32,R30
                 ; 0000 006E OCR0=0x00;
0000e6 bfec      	OUT  0x3C,R30
                 ; 0000 006F 
                 ; 0000 0070 // Timer/Counter 1 initialization
                 ; 0000 0071 // Clock source: System Clock
                 ; 0000 0072 // Clock value: Timer1 Stopped
                 ; 0000 0073 // Mode: Normal top=0xFFFF
                 ; 0000 0074 // OC1A output: Disconnected
                 ; 0000 0075 // OC1B output: Disconnected
                 ; 0000 0076 // Noise Canceler: Off
                 ; 0000 0077 // Input Capture on Falling Edge
                 ; 0000 0078 // Timer1 Overflow Interrupt: Off
                 ; 0000 0079 // Input Capture Interrupt: Off
                 ; 0000 007A // Compare A Match Interrupt: Off
                 ; 0000 007B // Compare B Match Interrupt: Off
                 ; 0000 007C TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0000e7 bdef      	OUT  0x2F,R30
                 ; 0000 007D TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
0000e8 bdee      	OUT  0x2E,R30
                 ; 0000 007E TCNT1H=0x00;
0000e9 bded      	OUT  0x2D,R30
                 ; 0000 007F TCNT1L=0x00;
0000ea bdec      	OUT  0x2C,R30
                 ; 0000 0080 ICR1H=0x00;
0000eb bde7      	OUT  0x27,R30
                 ; 0000 0081 ICR1L=0x00;
0000ec bde6      	OUT  0x26,R30
                 ; 0000 0082 OCR1AH=0x00;
0000ed bdeb      	OUT  0x2B,R30
                 ; 0000 0083 OCR1AL=0x00;
0000ee bdea      	OUT  0x2A,R30
                 ; 0000 0084 OCR1BH=0x00;
0000ef bde9      	OUT  0x29,R30
                 ; 0000 0085 OCR1BL=0x00;
0000f0 bde8      	OUT  0x28,R30
                 ; 0000 0086 
                 ; 0000 0087 // Timer/Counter 2 initialization
                 ; 0000 0088 // Clock source: System Clock
                 ; 0000 0089 // Clock value: Timer2 Stopped
                 ; 0000 008A // Mode: Normal top=0xFF
                 ; 0000 008B // OC2 output: Disconnected
                 ; 0000 008C ASSR=0<<AS2;
0000f1 bde2      	OUT  0x22,R30
                 ; 0000 008D TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
0000f2 bde5      	OUT  0x25,R30
                 ; 0000 008E TCNT2=0x00;
0000f3 bde4      	OUT  0x24,R30
                 ; 0000 008F OCR2=0x00;
0000f4 bde3      	OUT  0x23,R30
                 ; 0000 0090 
                 ; 0000 0091 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0092 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
0000f5 bfe9      	OUT  0x39,R30
                 ; 0000 0093 
                 ; 0000 0094 // External Interrupt(s) initialization
                 ; 0000 0095 // INT0: Off
                 ; 0000 0096 // INT1: Off
                 ; 0000 0097 // INT2: Off
                 ; 0000 0098 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0000f6 bfe5      	OUT  0x35,R30
                 ; 0000 0099 MCUCSR=(0<<ISC2);
0000f7 bfe4      	OUT  0x34,R30
                 ; 0000 009A 
                 ; 0000 009B // USART initialization
                 ; 0000 009C // USART disabled
                 ; 0000 009D UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000f8 b9ea      	OUT  0xA,R30
                 ; 0000 009E 
                 ; 0000 009F // Analog Comparator initialization
                 ; 0000 00A0 // Analog Comparator: Off
                 ; 0000 00A1 // The Analog Comparator's positive input is
                 ; 0000 00A2 // connected to the AIN0 pin
                 ; 0000 00A3 // The Analog Comparator's negative input is
                 ; 0000 00A4 // connected to the AIN1 pin
                 ; 0000 00A5 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000f9 e8e0      	LDI  R30,LOW(128)
0000fa b9e8      	OUT  0x8,R30
                 ; 0000 00A6 SFIOR=(0<<ACME);
0000fb e0e0      	LDI  R30,LOW(0)
0000fc bfe0      	OUT  0x30,R30
                 ; 0000 00A7 
                 ; 0000 00A8 // ADC initialization
                 ; 0000 00A9 // ADC disabled
                 ; 0000 00AA ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000fd b9e6      	OUT  0x6,R30
                 ; 0000 00AB 
                 ; 0000 00AC // SPI initialization
                 ; 0000 00AD // SPI disabled
                 ; 0000 00AE SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000fe b9ed      	OUT  0xD,R30
                 ; 0000 00AF 
                 ; 0000 00B0 // TWI initialization
                 ; 0000 00B1 // TWI disabled
                 ; 0000 00B2 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000ff bfe6      	OUT  0x36,R30
                 ; 0000 00B3 
                 ; 0000 00B4 // Alphanumeric LCD initialization
                 ; 0000 00B5 // Connections are specified in the
                 ; 0000 00B6 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 00B7 // RS: PORTC Bit 0
                 ; 0000 00B8 // RD: PORTC Bit 1
                 ; 0000 00B9 // EN: PORTC Bit 2
                 ; 0000 00BA // D4: PORTC Bit 4
                 ; 0000 00BB // D5: PORTC Bit 5
                 ; 0000 00BC // D6: PORTC Bit 6
                 ; 0000 00BD // D7: PORTC Bit 7
                 ; 0000 00BE // Characters/line: 16
                 ; 0000 00BF lcd_init(16);
000100 e1a0      	LDI  R26,LOW(16)
000101 d05e      	RCALL _lcd_init
                 ; 0000 00C0 
                 ; 0000 00C1 while (1)
                 _0xE:
                 ; 0000 00C2 {
                 ; 0000 00C3 on = !PINA.1;
000102 e0e0      	LDI  R30,0
000103 9bc9      	SBIS 0x19,1
000104 e0e1      	LDI  R30,1
000105 2ede      	MOV  R13,R30
                 ; 0000 00C4 
                 ; 0000 00C5 
                 ; 0000 00C6 
                 ; 0000 00C7 //clock logic
                 ; 0000 00C8 if (on && !(mins <= 0 && sec <= 0)){
000106 20dd      	TST  R13
000107 f049      	BREQ _0x12
000108 2400      	CLR  R0
000109 1404      	CP   R0,R4
00010a 0405      	CPC  R0,R5
00010b f024      	BRLT _0x13
00010c 2400      	CLR  R0
00010d 1406      	CP   R0,R6
00010e 0407      	CPC  R0,R7
00010f f40c      	BRGE _0x12
                 _0x13:
000110 c001      	RJMP _0x15
                 _0x12:
000111 c016      	RJMP _0x11
                 _0x15:
                 ; 0000 00C9 sec--;
000112 01f3      	MOVW R30,R6
000113 9731      	SBIW R30,1
000114 013f      	MOVW R6,R30
                 ; 0000 00CA 
                 ; 0000 00CB if (sec < 0){
000115 2400      	CLR  R0
000116 1460      	CP   R6,R0
000117 0470      	CPC  R7,R0
000118 f434      	BRGE _0x16
                 ; 0000 00CC mins--;
000119 01f2      	MOVW R30,R4
00011a 9731      	SBIW R30,1
00011b 012f      	MOVW R4,R30
                 ; 0000 00CD sec = 59;
00011c e3eb      	LDI  R30,LOW(59)
00011d e0f0      	LDI  R31,HIGH(59)
00011e 013f      	MOVW R6,R30
                 ; 0000 00CE }
                 ; 0000 00CF if (mins < 0){
                 _0x16:
00011f 2400      	CLR  R0
000120 1440      	CP   R4,R0
000121 0450      	CPC  R5,R0
000122 f414      	BRGE _0x17
                 ; 0000 00D0 sec = 0;
000123 2466      	CLR  R6
000124 2477      	CLR  R7
                 ; 0000 00D1 }
                 ; 0000 00D2 delay_ms(70);
                 _0x17:
000125 e4a6      	LDI  R26,LOW(70)
000126 e0b0      	LDI  R27,0
000127 d07d      	RCALL _delay_ms
                 ; 0000 00D3 }
                 ; 0000 00D4 if (!on){
                 _0x11:
000128 20dd      	TST  R13
000129 f429      	BRNE _0x18
                 ; 0000 00D5 ubahsec();
00012a df85      	RCALL _ubahsec
                 ; 0000 00D6 ubahmins();
00012b df96      	RCALL _ubahmins
                 ; 0000 00D7 delay_ms(40);
00012c e2a8      	LDI  R26,LOW(40)
00012d e0b0      	LDI  R27,0
00012e d076      	RCALL _delay_ms
                 ; 0000 00D8 }
                 ; 0000 00D9 tampildata();
                 _0x18:
00012f df7d      	RCALL _tampildata
                 ; 0000 00DA }
000130 cfd1      	RJMP _0xE
                 ; 0000 00DB }
                 _0x19:
000131 cfff      	RJMP _0x19
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
                 ; .FSTART __lcd_write_nibble_G102
000132 931a      	ST   -Y,R17
000133 2f1a      	MOV  R17,R26
000134 b3e5      	IN   R30,0x15
000135 70ef      	ANDI R30,LOW(0xF)
000136 2fae      	MOV  R26,R30
000137 2fe1      	MOV  R30,R17
000138 7fe0      	ANDI R30,LOW(0xF0)
000139 2bea      	OR   R30,R26
00013a bbe5      	OUT  0x15,R30
                +
00013b e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
00013c 958a     +DEC R24
00013d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
00013e 9aaa      	SBI  0x15,2
                +
00013f e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
000140 958a     +DEC R24
000141 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
000142 98aa      	CBI  0x15,2
                +
000143 e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
000144 958a     +DEC R24
000145 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
000146 c043      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000147 93aa      	ST   -Y,R26
000148 81a8      	LD   R26,Y
000149 dfe8      	RCALL __lcd_write_nibble_G102
00014a 81e8          ld    r30,y
00014b 95e2          swap  r30
00014c 83e8          st    y,r30
00014d 81a8      	LD   R26,Y
00014e dfe3      	RCALL __lcd_write_nibble_G102
                +
00014f ec88     +LDI R24 , LOW ( 200 )
                +__DELAY_USB_LOOP :
000150 958a     +DEC R24
000151 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 200
000152 9621      	ADIW R28,1
000153 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000154 e0a2      	LDI  R26,LOW(2)
000155 d044      	RCALL SUBOPT_0x2
000156 e0ac      	LDI  R26,LOW(12)
000157 dfef      	RCALL __lcd_write_data
000158 e0a1      	LDI  R26,LOW(1)
000159 d040      	RCALL SUBOPT_0x2
00015a e0e0      	LDI  R30,LOW(0)
00015b 93e0 02cd 	STS  __lcd_y,R30
00015d 93e0 02cc 	STS  __lcd_x,R30
00015f 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000160 931a      	ST   -Y,R17
000161 2f1a      	MOV  R17,R26
000162 b3e4      	IN   R30,0x14
000163 6fe0      	ORI  R30,LOW(0xF0)
000164 bbe4      	OUT  0x14,R30
000165 9aa2      	SBI  0x14,2
000166 9aa0      	SBI  0x14,0
000167 9aa1      	SBI  0x14,1
000168 98aa      	CBI  0x15,2
000169 98a8      	CBI  0x15,0
00016a 98a9      	CBI  0x15,1
00016b 9310 02ce 	STS  __lcd_maxx,R17
00016d 2fe1      	MOV  R30,R17
00016e 58e0      	SUBI R30,-LOW(128)
                +
00016f 93e0 02ca+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
000171 2fe1      	MOV  R30,R17
000172 54e0      	SUBI R30,-LOW(192)
                +
000173 93e0 02cb+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
000175 e1a4      	LDI  R26,LOW(20)
000176 e0b0      	LDI  R27,0
000177 d02d      	RCALL _delay_ms
000178 d025      	RCALL SUBOPT_0x3
000179 d024      	RCALL SUBOPT_0x3
00017a d023      	RCALL SUBOPT_0x3
00017b e2a0      	LDI  R26,LOW(32)
00017c dfb5      	RCALL __lcd_write_nibble_G102
                +
00017d e28c     +LDI R24 , LOW ( 300 )
00017e e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
00017f 9701     +SBIW R24 , 1
000180 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
000181 e2a8      	LDI  R26,LOW(40)
000182 dfc4      	RCALL __lcd_write_data
000183 e0a4      	LDI  R26,LOW(4)
000184 dfc2      	RCALL __lcd_write_data
000185 e8a5      	LDI  R26,LOW(133)
000186 dfc0      	RCALL __lcd_write_data
000187 e0a6      	LDI  R26,LOW(6)
000188 dfbe      	RCALL __lcd_write_data
000189 dfca      	RCALL _lcd_clear
                 _0x20C0001:
00018a 9119      	LD   R17,Y+
00018b 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.DSEG
                 _angka:
000260           	.BYTE 0x64
                 __seed_G101:
0002c4           	.BYTE 0x4
                 __base_y_G102:
0002c8           	.BYTE 0x4
                 __lcd_x:
0002cc           	.BYTE 0x1
                 __lcd_y:
0002cd           	.BYTE 0x1
                 __lcd_maxx:
0002ce           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
00018c e6a0      	LDI  R26,LOW(_angka)
00018d e0b2      	LDI  R27,HIGH(_angka)
00018e 0da4      	ADD  R26,R4
00018f 1db5      	ADC  R27,R5
000190 91ec      	LD   R30,X
000191 bbe8      	OUT  0x18,R30
000192 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000193 e6a0      	LDI  R26,LOW(_angka)
000194 e0b2      	LDI  R27,HIGH(_angka)
000195 0da6      	ADD  R26,R6
000196 1db7      	ADC  R27,R7
000197 91ec      	LD   R30,X
000198 bbe2      	OUT  0x12,R30
000199 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
00019a dfac      	RCALL __lcd_write_data
00019b e0a3      	LDI  R26,LOW(3)
00019c e0b0      	LDI  R27,0
00019d c007      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3:
00019e e3a0      	LDI  R26,LOW(48)
00019f df92      	RCALL __lcd_write_nibble_G102
                +
0001a0 e28c     +LDI R24 , LOW ( 300 )
0001a1 e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
0001a2 9701     +SBIW R24 , 1
0001a3 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
0001a4 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 _delay_ms:
0001a5 9610      	adiw r26,0
0001a6 f039      	breq __delay_ms1
                 __delay_ms0:
0001a7 95a8      	wdr
                +
0001a8 eb88     +LDI R24 , LOW ( 0xBB8 )
0001a9 e09b     +LDI R25 , HIGH ( 0xBB8 )
                +__DELAY_USW_LOOP :
0001aa 9701     +SBIW R24 , 1
0001ab f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xBB8
0001ac 9711      	sbiw r26,1
0001ad f7c9      	brne __delay_ms0
                 __delay_ms1:
0001ae 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  16 r1 :   1 r2 :   0 r3 :   0 r4 :  10 r5 :   4 r6 :  12 r7 :   5 
r8 :   1 r9 :   0 r10:   1 r11:   0 r12:   0 r13:   3 r14:   0 r15:   0 
r16:   0 r17:   9 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  21 r25:   5 r26:  30 r27:  10 r28:   2 r29:   1 r30: 107 r31:   8 
x  :   5 y  :   8 z  :   7 
Registers used: 22 out of 35 (62.9%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   2 
adiw  :   4 and   :   0 andi  :   2 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   3 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   1 brmi  :   0 brne  :  14 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   4 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   8 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   6 cpc   :   6 cpi   :   0 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   0 jmp   :  22 ld    :   6 ldd   :   0 ldi   :  61 
lds   :   0 lpm   :   7 lsl   :   0 lsr   :   0 mov   :   7 movw  :  16 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   1 
ori   :   1 out   :  44 pop   :   0 push  :   0 rcall :  27 ret   :  12 
reti  :   0 rjmp  :  13 rol   :   0 ror   :   0 sbc   :   0 sbci  :   0 
sbi   :   4 sbic  :   4 sbis  :   1 sbiw  :  11 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :   7 std   :   0 sts   :   5 sub   :   0 subi  :   2 swap  :   1 
tst   :   2 wdr   :   1 
Instructions used: 37 out of 116 (31.9%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00035e    690    172    862   32768   2.6%
[.dseg] 0x000060 0x0002cf      0    111    111    2048   5.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 14 warnings
